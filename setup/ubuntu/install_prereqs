#!/bin/bash

# BSD 3-Clause License
#
# Copyright (c) 2019, Massachusetts Institute of Technology.
# Copyright (c) 2019, Toyota Research Institute.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -euxo pipefail

if [[ -z "${WORKSPACE-}" ]]; then
  echo 'ERROR: This script must be run on a Jenkins node' >&2
  exit 1
fi

if [[ "${EUID}" -ne 0 ]]; then
  echo 'ERROR: This script must be run as root' >&2
  exit 2
fi

systemctl --quiet disable apt-daily-upgrade.timer apt-daily.timer

echo 'APT::Acquire::Retries "4";' > /etc/apt/apt.conf.d/80-acquire-retries

export DEBIAN_FRONTEND=noninteractive
export PYTHONWARNINGS=ignore::SyntaxWarning

apt-get update -qq || (sleep 15; apt-get update -qq)
trap 'set +x; rm -rf /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin /var/lib/apt/lists/* /var/log/apt/*; set -x' EXIT

apt-get purge --autoremove -o Dpkg::Use-Pty=0 -qy cron unattended-upgrades
rm -rf /etc/cron.daily/apt-compat /var/log/unattended-upgrades

apt-get upgrade -o Dpkg::Options::=--force-confdef \
  -o Dpkg::Options::=--force-confnew -o Dpkg::Use-Pty=0 -qy

apt-get install --no-install-recommends -o Dpkg::Use-Pty=0 -qy \
  awscli \
  ca-certificates \
  git \
  gnupg \
  lsb-release \
  openjdk-8-jre-headless \
  wget \
  xvfb

update-java-alternatives --jre-headless -s java-1.8.0-openjdk-amd64

echo 'verbose = off' > /root/.wgetrc

cp /root/.wgetrc /home/ubuntu/.wgetrc
chown ubuntu:ubuntu /home/ubuntu/.wgetrc

cat << EOF > /lib/systemd/system/xvfb.service
[Unit]
After=network.target

[Service]
ExecStart=/usr/bin/Xvfb :99 -screen 0 1280x1024x24 -ac +extension GLX +extension RANDR +render -noreset

[Install]
WantedBy=multi-user.target
EOF

systemctl --now --quiet enable /lib/systemd/system/xvfb.service

if [[ "$(lsb_release -cs)" == 'bionic' ]]; then
  apt-get install --no-install-recommends -o Dpkg::Use-Pty=0 -qy \
    ntp
else
  apt-get install --no-install-recommends -o Dpkg::Use-Pty=0 -qy \
    systemd-timesyncd

  timedatectl set-ntp on
fi

export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1

wget -q -t 4 -O- --retry-connrefused \
  https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -

echo "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" \
  > /etc/apt/sources.list.d/kitware.list

apt-get update -qq || (sleep 15; apt-get update -qq)
apt-get install --no-install-recommends -o Dpkg::Use-Pty=0 -qy \
  cmake \
  kitware-archive-keyring

apt-key --keyring /etc/apt/trusted.gpg del A8E5EF3A02600268

wget -nv -t 4 -O /tmp/gurobi9.5.1_linux64.tar.gz --retry-connrefused \
  https://packages.gurobi.com/9.5/gurobi9.5.1_linux64.tar.gz
echo 'fa82859d33f08fb8aeb9da66b0fbd91718ed573c534f571aa52372c9deb891da  /tmp/gurobi9.5.1_linux64.tar.gz' \
  | sha256sum -c -
trap 'set +x; rm -rf /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin /var/lib/apt/lists/* /var/log/apt/* /tmp/gurobi9.5.1_linux64.tar.gz; set -x' EXIT
tar -C /opt -xf /tmp/gurobi9.5.1_linux64.tar.gz
echo '12f63795802c7b74cd0ccc87ed73061346a3a28933e6860fad9c7dbfcf5d9250  /opt/gurobi951/linux64/include/gurobi_c.h' \
  | sha256sum -c -

aws s3 cp --only-show-errors s3://drake-provisioning/gurobi/gurobi.lic \
  /opt/gurobi951/gurobi.lic
echo '85a76935617e809af43275fa4d7f7fc38182973c5756edde9b8db59ef65420cb  /opt/gurobi951/gurobi.lic' \
  | sha256sum -c -

chown -R root:root /opt/gurobi951
