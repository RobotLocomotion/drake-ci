server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Send the logging files to our own custom location.
    access_log /opt/cache_server/log/nginx/access.log;
    error_log /opt/cache_server/log/nginx/error.log;

    # Disable logging of "file not found" (do not log cache misses).
    log_not_found off;

    # Configure better performance.
    aio threads;
    # NOTE: this may actually degrade performance if RAM is highly available
    # [linux cache server].  May want to enable it only there.
    directio 8m;
    sendfile on;

    # Limits the amount of data that can be transferred in a single sendfile() call.
    # Without the limit, one fast connection may seize the worker process entirely.
    sendfile_max_chunk 512k;

    # Allow connection timeouts to try
    reset_timedout_connection on;
    server_tokens off;

    # Where on the local filesystem the server's root lives.
    root /cache/data;

    # https://bazel.build/remote/caching#nginx
    location / {
        # drake-ci does a GET on / and disables the cache if unsuccessful.
        # Since we are serving content from /cache/toyotacache, we cannot
        # also serve /var/www/html using the `index` directive.  One
        # solution is to create /cache/toyotacache/index.html, however in
        # the event of automated (or reckless manual) cleanup if the file
        # is deleted then even though the server is live, the GET / will
        # fail.  Instead, we use `autoindex` which will just provide a
        # directory listing of a given folder (along with a valid http
        # status code).  Since the cache server is hidden from the rest of
        # the internet, we do not need to worry about prying eyes.
        autoindex on;

        # Allow PUT
        dav_methods PUT;
        # Allow nginx to create the /ac and /cas subdirectories.
        create_full_put_path on;
        # The maximum size of a single file.
        client_max_body_size 1G;
        client_body_temp_path /cache/data/client-body-temp;
        allow all;
    }

    # Enable local querying of server status.
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }
}
